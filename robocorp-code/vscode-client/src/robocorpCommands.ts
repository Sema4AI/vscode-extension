// Warning: Don't edit file (autogenerated from python -m dev codegen).

export const ROBOCORP_GET_LANGUAGE_SERVER_PYTHON = "robocorp.getLanguageServerPython";  // Get a python executable suitable to start the language server.
export const ROBOCORP_GET_PLUGINS_DIR = "robocorp.getPluginsDir";  // Get the directory for plugins.
export const ROBOCORP_CREATE_ACTIVITY = "robocorp.createActivity";  // Create Activity Package.
export const ROBOCORP_LIST_ACTIVITY_TEMPLATES_INTERNAL = "robocorp.listActivityTemplates.internal";  // Provides a list with the available activity templates.
export const ROBOCORP_CREATE_ACTIVITY_INTERNAL = "robocorp.createActivity.internal";  // Actually calls rcc to create the activity.
export const ROBOCORP_UPLOAD_ACTIVITY_TO_CLOUD = "robocorp.uploadActivityToCloud";  // Upload Activity Package to the cloud.
export const ROBOCORP_LOCAL_LIST_ACTIVITIES_INTERNAL = "robocorp.localListActivities.internal";  // Lists the activities currently available in the workspace.
export const ROBOCORP_IS_LOGIN_NEEDED_INTERNAL = "robocorp.isLoginNeeded.internal";  // Checks if the user is already logged in.
export const ROBOCORP_CLOUD_LOGIN_INTERNAL = "robocorp.cloudLogin.internal";  // Logs into Robocloud.
export const ROBOCORP_CLOUD_LIST_WORKSPACES_INTERNAL = "robocorp.cloudListWorkspaces.internal";  // Lists the workspaces available for the user (in the cloud).
export const ROBOCORP_UPLOAD_TO_NEW_ACTIVITY_INTERNAL = "robocorp.uploadToNewActivity.internal";  // Uploads an Activity Package as a new Activity Package in the cloud.
export const ROBOCORP_UPLOAD_TO_EXISTING_ACTIVITY_INTERNAL = "robocorp.uploadToExistingActivity.internal";  // Uploads an Activity Package as an existing Activity Package in the cloud.