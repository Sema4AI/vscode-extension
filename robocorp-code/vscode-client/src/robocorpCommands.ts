// Warning: Don't edit file (autogenerated from python -m dev codegen).

export const ROBOCORP_GET_LANGUAGE_SERVER_PYTHON = "robocorp.getLanguageServerPython";  // Get a python executable suitable to start the language server.
export const ROBOCORP_GET_PLUGINS_DIR = "robocorp.getPluginsDir";  // Get the directory for plugins.
export const ROBOCORP_CREATE_ROBOT = "robocorp.createRobot";  // Create Robot.
export const ROBOCORP_LIST_ROBOT_TEMPLATES_INTERNAL = "robocorp.listRobotTemplates.internal";  // Provides a list with the available robot templates.
export const ROBOCORP_CREATE_ROBOT_INTERNAL = "robocorp.createRobot.internal";  // Actually calls rcc to create the robot.
export const ROBOCORP_UPLOAD_ROBOT_TO_CLOUD = "robocorp.uploadRobotToCloud";  // Upload Robot to the cloud.
export const ROBOCORP_LOCAL_LIST_ROBOTS_INTERNAL = "robocorp.localListRobots.internal";  // Lists the activities currently available in the workspace.
export const ROBOCORP_IS_LOGIN_NEEDED_INTERNAL = "robocorp.isLoginNeeded.internal";  // Checks if the user is already logged in.
export const ROBOCORP_CLOUD_LOGIN = "robocorp.cloudLogin";  // Log in Robocloud.
export const ROBOCORP_CLOUD_LOGIN_INTERNAL = "robocorp.cloudLogin.internal";  // Log in Robocloud (receives credentials).
export const ROBOCORP_CLOUD_LIST_WORKSPACES_INTERNAL = "robocorp.cloudListWorkspaces.internal";  // Lists the workspaces available for the user (in the cloud).
export const ROBOCORP_UPLOAD_TO_NEW_ROBOT_INTERNAL = "robocorp.uploadToNewRobot.internal";  // Uploads an Robot as a new Robot in the cloud.
export const ROBOCORP_UPLOAD_TO_EXISTING_ROBOT_INTERNAL = "robocorp.uploadToExistingRobot.internal";  // Uploads an Robot as an existing Robot in the cloud.