on:
  push:
    branches:
      - "release-robotframework-lsp"
    tags:
      - "robotframework-lsp-*"
name: Deploy - RobotFramework Language Server Extension
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./robotframework-ls
    
    strategy:
      fail-fast: true

    steps:
    - name: Checkout repository and submodules
      uses: actions/checkout@v1
      with:
        submodules: recursive
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 16.x
    - name: Yarn install
      run: yarn install
    - name: Set up Python 3.7
      uses: actions/setup-python@v1
      with:
        python-version: 3.7
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    
    # Build Python version
    - name: Install deps
      run: pip install --upgrade pip fire twine wheel setuptools
    - name: Vendor robocorp_ls_core/robotframework_interactive
      run: |
        python -m dev vendor-robocorp-ls-core
        python -m dev vendor-robotframework-interactive
        python -m dev vendor-robotframework-output-stream
    - name: Fix README references
      run: python -m dev fix-readme
    - name: Build wheel
      working-directory: ./robotframework-ls/src
      run: |
        cp ../README.md ./README.md
        python setup.py sdist bdist_wheel --universal
        
    # VSCode (build)
    - run: npm install -g vsce@2.6.7
    - run: vsce package -o robotframework-lsp.vsix
    - uses: actions/upload-artifact@v1
      with:
        name: robotframework-lsp.vsix
        path: ./robotframework-ls/robotframework-lsp.vsix

    # Intellij (build)  
    - name: Package
      working-directory: ./robotframework-intellij
      run: ./gradlew buildPlugin
    - uses: actions/upload-artifact@v1
      with:
        name: intellij-distribution
        path: robotframework-intellij/build/distributions/

    - name: Check tag version
      run: python -m dev check-tag-version
      
    - name: Publish intellij plugin
      working-directory: ./robotframework-intellij
      run: ./gradlew publishPlugin
      env:
        ORG_GRADLE_PROJECT_intellijPublishToken: ${{ secrets.ORG_GRADLE_PROJECT_intellijPublishToken }}
    - name: Upload to PyPI
      working-directory: ./robotframework-ls/src
      run: twine upload dist/*
      env:
        TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
    - name: Publish to vscode marketplace 
      run: vsce publish -p $VSCE_TOKEN
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
    - name: Publish to open vsx marketplace 
      run: npx ovsx publish robotframework-lsp.vsix -p $OPEN_VSX_TOKEN
      env:
        OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}