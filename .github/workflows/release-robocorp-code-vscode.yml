on:
  push:
    branches:
      - "release-sema4ai-code"
    tags:
      - "sema4ai-code-*"
name: Deploy - Sema4.ai Code Extension
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./sema4ai-code
    
    strategy:
      fail-fast: true

    steps:
    - uses: actions/checkout@v1
    - name: Setup node
      uses: actions/setup-node@v1
      with:
        node-version: 18.x
    - name: Yarn install
      run: yarn install
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
    - name: Install deps
      run: pip install --upgrade pip fire poetry
    - name: Vendor sema4ai_ls_core
      run: python -m dev vendor-robocorp-ls-core
    - name: Fix README references
      run: python -m dev fix-readme
    - name: Generate LICENSE.md
      run: python -m dev generate-license-file
    - name: Install locally
      working-directory: ./sema4ai-code
      run: poetry install
    - run: npm install -g vsce@2.15.0
        
    - name: Check tag version
      run: python -m dev check-tag-version

    # Deal with Windows --------------
    - name: Download rcc for windows
      run: python -m dev download-rcc win32
      
    - run: vsce package --target win32-x64 -o sema4ai-code-win32-x64.vsix

    - uses: actions/upload-artifact@v1
      with:
        name: sema4ai-code-win32-x64.vsix
        path: ./sema4ai-code/sema4ai-code-win32-x64.vsix
    
    - name: Publish pre-release to vscode marketplace
      run: vsce publish --packagePath ./sema4ai-code-win32-x64.vsix -p $VSCE_TOKEN
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        
    - name: Publish windows to open vsx marketplace 
      run: npx ovsx publish sema4ai-code-win32-x64.vsix -p $OPEN_VSX_TOKEN
      env:
        OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}
                
    # Deal with Linux --------------
    - name: Download rcc for linux
      run: python -m dev download-rcc linux
      
    - run: vsce package --target linux-x64 -o sema4ai-code-linux-x64.vsix

    - uses: actions/upload-artifact@v1
      with:
        name: sema4ai-code-linux-x64.vsix
        path: ./sema4ai-code/sema4ai-code-linux-x64.vsix
    
    - name: Publish pre-release to vscode marketplace
      run: vsce publish --packagePath ./sema4ai-code-linux-x64.vsix -p $VSCE_TOKEN
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        
    - name: Publish linux to open vsx marketplace 
      run: npx ovsx publish sema4ai-code-linux-x64.vsix -p $OPEN_VSX_TOKEN
      env:
        OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}
        
    # Deal with Darwin x64 --------------
    - name: Download rcc for darwin
      run: python -m dev download-rcc darwin
      
    - run: vsce package --target darwin-x64 -o sema4ai-code-darwin-x64.vsix

    - uses: actions/upload-artifact@v1
      with:
        name: sema4ai-code-darwin-x64.vsix
        path: ./sema4ai-code/sema4ai-code-darwin-x64.vsix
    
    - name: Publish pre-release to vscode marketplace
      run: vsce publish --packagePath ./sema4ai-code-darwin-x64.vsix -p $VSCE_TOKEN
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        
    - name: Publish darwin to open vsx marketplace 
      run: npx ovsx publish sema4ai-code-darwin-x64.vsix -p $OPEN_VSX_TOKEN
      env:
        OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}
        
    # Deal with Darwin arm64 --------------
    - name: Download rcc for darwin
      run: python -m dev download-rcc darwin
      
    - run: vsce package --target darwin-arm64 -o sema4ai-code-darwin-arm64.vsix

    - uses: actions/upload-artifact@v1
      with:
        name: sema4ai-code-darwin-arm64.vsix
        path: ./sema4ai-code/sema4ai-code-darwin-arm64.vsix
    
    - name: Publish pre-release to vscode marketplace
      run: vsce publish --packagePath ./sema4ai-code-darwin-arm64.vsix -p $VSCE_TOKEN
      env:
        VSCE_TOKEN: ${{ secrets.VSCE_TOKEN }}
        
    - name: Publish darwin to open vsx marketplace 
      run: npx ovsx publish sema4ai-code-darwin-arm64.vsix -p $OPEN_VSX_TOKEN
      env:
        OPEN_VSX_TOKEN: ${{ secrets.OPEN_VSX_TOKEN }}