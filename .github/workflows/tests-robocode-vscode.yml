name: Tests - Robocorp Code (robocorp-code)

on:
  push:
    paths:
    - robocorp-code/**
    - robocorp-python-ls-core/**
    - robotframework-ls/**
    - .github/**

  pull_request:
    paths:
    - robocorp-code/**
    - robocorp-python-ls-core/**
    - robotframework-ls/**
    - .github/**
      
jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      fail-fast: false
      matrix:
        name: [
          "ubuntu-py38",
        ]
        
        include:
          - name: "ubuntu-py38"
            python: "3.8"
            os: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python }}
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Vendor robocorp_ls_core
      working-directory: ./robocorp-code
      run: |
        pip install fire
        python -m dev vendor-robocorp-ls-core
    - name: setup.py install robotframework-ls
      working-directory: ./robotframework-ls
      run: |
        cd src
        python setup.py install
        cd ..
    - name: setup.py install
      working-directory: ./robocorp-code
      run: |
        cd src
        python setup.py install
        cd ..
    - name: Install test deps
      working-directory: ./robocorp-code
      run: |
        cd tests
        pip install -r test_requirements.txt
        cd ..
    - name: Test
      working-directory: ./robocorp-code/tests
      env:
        PYTHONPATH: .
        CI_CREDENTIALS: ${{ secrets.CI_CREDENTIALS }}
        CI_ENDPOINT: ${{ secrets.CI_ENDPOINT }}
        RUN_TESTS_TIMEOUT: 300
      run: python -u ../../robocorp-python-ls-core/tests/run_tests.py -otests_output -vv .
    - uses: actions/upload-artifact@v1
      with:
        name: tests_output.${{ matrix.name }}.txt
        path: robocorp-code/tests/tests_output

